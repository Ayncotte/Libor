#include "createTestModel.h"

#include <boost/numeric/ublas/assignment.hpp>

#include "Model.h"

namespace ublas = boost::numeric::ublas;

Model createTestModel() {
	double theta = 1;
	double kappa = 1;
	double delta = 0.25;
	double sigma_b = 0.2;
	double CIR_init = theta;
	const std::size_t N = 8;
	ublas::vector<double> F_init = ublas::scalar_vector<double>(N, 0.1);
	ublas::vector<double> alpha = ublas::scalar_vector<double>(N, 0);
	ublas::matrix<double> beta(N - 1, N - 1);

	beta <<=
		4.0000000e-01, 3.8049177e-01, 3.6193497e-01, 3.4428319e-01, 3.2749230e-01, 3.1152031e-01, 2.9632729e-01,
		0.0000000e+00, 1.2339373e-01, 1.1737575e-01, 1.1165127e-01, 1.0620597e-01, 1.0102624e-01, 9.6099135e-02,
		0.0000000e+00, 0.0000000e+00, 1.2339373e-01, 1.1737575e-01, 1.1165127e-01, 1.0620597e-01, 1.0102624e-01,
		0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 1.2339373e-01, 1.1737575e-01, 1.1165127e-01, 1.0620597e-01,
		0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 1.2339373e-01, 1.1737575e-01, 1.1165127e-01,
		0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 1.2339373e-01, 1.1737575e-01,
		0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 1.2339373e-01;

	ublas::vector<double> sigma(N - 1);

	sigma <<=
		1.8898224e-01,
		1.8898224e-01,
		1.8898224e-01,
		1.8898224e-01,
		1.8898224e-01,
		1.8898224e-01,
		1.8898224e-01;

	ublas::matrix<double> gamma(N - 1, N - 1);

	gamma <<=
		2.0000000e-01, 1.9024588e-01, 1.8096748e-01, 1.7214160e-01, 1.6374615e-01, 1.5576016e-01, 1.4816364e-01,
		0.0000000e+00, 6.1696866e-02, 5.8687874e-02, 5.5825633e-02, 5.3102985e-02, 5.0513122e-02, 4.8049568e-02,
		0.0000000e+00, 0.0000000e+00, 6.1696866e-02, 5.8687874e-02, 5.5825633e-02, 5.3102985e-02, 5.0513122e-02,
		0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 6.1696866e-02, 5.8687874e-02, 5.5825633e-02, 5.3102985e-02,
		0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 6.1696866e-02, 5.8687874e-02, 5.5825633e-02,
		0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 6.1696866e-02, 5.8687874e-02,
		0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 0.0000000e+00, 6.1696866e-02;

	ublas::vector<double> F_avg = ublas::zero_vector<double>(N);

    return Model(N, alpha, delta, F_init, CIR_init, beta, gamma, kappa, theta, sigma, sigma_b);
}
